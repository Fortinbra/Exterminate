// Audio index implementations for Exterminate project
// This file contains the actual definitions for audio file registry
// 
// Auto-generated by tools/audio_to_pcm_header.py - DO NOT EDIT MANUALLY

#include "../include/audio/audio_index.h"

namespace Exterminate {
namespace Audio {

const AudioFile AUDIO_FILES[] = {
    {"00001.mp3", AUDIO_00001_DATA, AUDIO_00001_SAMPLE_COUNT, AUDIO_00001_BYTE_SIZE, 
     AUDIO_00001_SAMPLE_RATE, AUDIO_00001_CHANNELS, AUDIO_00001_BIT_DEPTH},
    {"00002.mp3", AUDIO_00002_DATA, AUDIO_00002_SAMPLE_COUNT, AUDIO_00002_BYTE_SIZE, 
     AUDIO_00002_SAMPLE_RATE, AUDIO_00002_CHANNELS, AUDIO_00002_BIT_DEPTH},
    {"00003.mp3", AUDIO_00003_DATA, AUDIO_00003_SAMPLE_COUNT, AUDIO_00003_BYTE_SIZE, 
     AUDIO_00003_SAMPLE_RATE, AUDIO_00003_CHANNELS, AUDIO_00003_BIT_DEPTH},
    {"00004.mp3", AUDIO_00004_DATA, AUDIO_00004_SAMPLE_COUNT, AUDIO_00004_BYTE_SIZE, 
     AUDIO_00004_SAMPLE_RATE, AUDIO_00004_CHANNELS, AUDIO_00004_BIT_DEPTH},
    {"00005.mp3", AUDIO_00005_DATA, AUDIO_00005_SAMPLE_COUNT, AUDIO_00005_BYTE_SIZE, 
     AUDIO_00005_SAMPLE_RATE, AUDIO_00005_CHANNELS, AUDIO_00005_BIT_DEPTH},
    {"00006.mp3", AUDIO_00006_DATA, AUDIO_00006_SAMPLE_COUNT, AUDIO_00006_BYTE_SIZE, 
     AUDIO_00006_SAMPLE_RATE, AUDIO_00006_CHANNELS, AUDIO_00006_BIT_DEPTH},
    {"00007.mp3", AUDIO_00007_DATA, AUDIO_00007_SAMPLE_COUNT, AUDIO_00007_BYTE_SIZE, 
     AUDIO_00007_SAMPLE_RATE, AUDIO_00007_CHANNELS, AUDIO_00007_BIT_DEPTH},
    {"00008.mp3", AUDIO_00008_DATA, AUDIO_00008_SAMPLE_COUNT, AUDIO_00008_BYTE_SIZE, 
     AUDIO_00008_SAMPLE_RATE, AUDIO_00008_CHANNELS, AUDIO_00008_BIT_DEPTH},
    {"00009.mp3", AUDIO_00009_DATA, AUDIO_00009_SAMPLE_COUNT, AUDIO_00009_BYTE_SIZE, 
     AUDIO_00009_SAMPLE_RATE, AUDIO_00009_CHANNELS, AUDIO_00009_BIT_DEPTH},
    {"00010.mp3", AUDIO_00010_DATA, AUDIO_00010_SAMPLE_COUNT, AUDIO_00010_BYTE_SIZE, 
     AUDIO_00010_SAMPLE_RATE, AUDIO_00010_CHANNELS, AUDIO_00010_BIT_DEPTH},
    {"00011.mp3", AUDIO_00011_DATA, AUDIO_00011_SAMPLE_COUNT, AUDIO_00011_BYTE_SIZE, 
     AUDIO_00011_SAMPLE_RATE, AUDIO_00011_CHANNELS, AUDIO_00011_BIT_DEPTH},
    {"00012.mp3", AUDIO_00012_DATA, AUDIO_00012_SAMPLE_COUNT, AUDIO_00012_BYTE_SIZE, 
     AUDIO_00012_SAMPLE_RATE, AUDIO_00012_CHANNELS, AUDIO_00012_BIT_DEPTH},
    {"00013.mp3", AUDIO_00013_DATA, AUDIO_00013_SAMPLE_COUNT, AUDIO_00013_BYTE_SIZE, 
     AUDIO_00013_SAMPLE_RATE, AUDIO_00013_CHANNELS, AUDIO_00013_BIT_DEPTH},
    {"00014.mp3", AUDIO_00014_DATA, AUDIO_00014_SAMPLE_COUNT, AUDIO_00014_BYTE_SIZE, 
     AUDIO_00014_SAMPLE_RATE, AUDIO_00014_CHANNELS, AUDIO_00014_BIT_DEPTH},
    {"00015.mp3", AUDIO_00015_DATA, AUDIO_00015_SAMPLE_COUNT, AUDIO_00015_BYTE_SIZE, 
     AUDIO_00015_SAMPLE_RATE, AUDIO_00015_CHANNELS, AUDIO_00015_BIT_DEPTH},
    {"00016.mp3", AUDIO_00016_DATA, AUDIO_00016_SAMPLE_COUNT, AUDIO_00016_BYTE_SIZE, 
     AUDIO_00016_SAMPLE_RATE, AUDIO_00016_CHANNELS, AUDIO_00016_BIT_DEPTH},
    {"00017.mp3", AUDIO_00017_DATA, AUDIO_00017_SAMPLE_COUNT, AUDIO_00017_BYTE_SIZE, 
     AUDIO_00017_SAMPLE_RATE, AUDIO_00017_CHANNELS, AUDIO_00017_BIT_DEPTH},
    {"00018.mp3", AUDIO_00018_DATA, AUDIO_00018_SAMPLE_COUNT, AUDIO_00018_BYTE_SIZE, 
     AUDIO_00018_SAMPLE_RATE, AUDIO_00018_CHANNELS, AUDIO_00018_BIT_DEPTH},
    {"00019.mp3", AUDIO_00019_DATA, AUDIO_00019_SAMPLE_COUNT, AUDIO_00019_BYTE_SIZE, 
     AUDIO_00019_SAMPLE_RATE, AUDIO_00019_CHANNELS, AUDIO_00019_BIT_DEPTH},
    {"00020.mp3", AUDIO_00020_DATA, AUDIO_00020_SAMPLE_COUNT, AUDIO_00020_BYTE_SIZE, 
     AUDIO_00020_SAMPLE_RATE, AUDIO_00020_CHANNELS, AUDIO_00020_BIT_DEPTH},
    {"00021.mp3", AUDIO_00021_DATA, AUDIO_00021_SAMPLE_COUNT, AUDIO_00021_BYTE_SIZE, 
     AUDIO_00021_SAMPLE_RATE, AUDIO_00021_CHANNELS, AUDIO_00021_BIT_DEPTH},
    {"00022.mp3", AUDIO_00022_DATA, AUDIO_00022_SAMPLE_COUNT, AUDIO_00022_BYTE_SIZE, 
     AUDIO_00022_SAMPLE_RATE, AUDIO_00022_CHANNELS, AUDIO_00022_BIT_DEPTH},
    {"00023.mp3", AUDIO_00023_DATA, AUDIO_00023_SAMPLE_COUNT, AUDIO_00023_BYTE_SIZE, 
     AUDIO_00023_SAMPLE_RATE, AUDIO_00023_CHANNELS, AUDIO_00023_BIT_DEPTH},
    {"00024.mp3", AUDIO_00024_DATA, AUDIO_00024_SAMPLE_COUNT, AUDIO_00024_BYTE_SIZE, 
     AUDIO_00024_SAMPLE_RATE, AUDIO_00024_CHANNELS, AUDIO_00024_BIT_DEPTH},
};

const size_t AUDIO_FILE_COUNT = 24;

const AudioFile* getAudioFile(AudioIndex index) {
    if (static_cast<size_t>(index) >= AUDIO_FILE_COUNT) {
        return nullptr;
    }
    return &AUDIO_FILES[static_cast<size_t>(index)];
}

const AudioFile* getAudioFile(const char* name) {
    for (size_t i = 0; i < AUDIO_FILE_COUNT; ++i) {
        if (strcmp(AUDIO_FILES[i].name, name) == 0) {
            return &AUDIO_FILES[i];
        }
    }
    return nullptr;
}

} // namespace Audio
} // namespace Exterminate
